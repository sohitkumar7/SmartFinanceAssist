import mongoose from 'mongoose';

// Define enums for the schema
const TransactionType = ['INCOME', 'EXPENSE'];
const RecurringInterval = ['DAILY', 'WEEKLY', 'MONTHLY', 'YEARLY'];
const TransactionStatus = ['COMPLETED', 'PENDING', 'CANCELLED'];

const transactionSchema = new mongoose.Schema({
  // The unique ID for the transaction, automatically generated by MongoDB.
  // Mongoose handles this with ObjectId, which is similar to Prisma's uuid.
  
  type: {
    type: String,
    enum: TransactionType,
    required: true,
  },

  amount: {
    type: Number, // Mongoose does not have a native Decimal type, so Number is used for currency.
    required: true,
  },

  description: {
    type: String,
    trim: true,
  },

  date: {
    type: Date,
    required: true,
  },

  category: {
    type: String,
    required: true,
  },

  receiptUrl: {
    type: String,
  },

  isRecurring: {
    type: Boolean,
    default: false,
  },

  recurringInterval: {
    type: String,
    enum: RecurringInterval,
  },

  nextRecurringDate: {
    type: Date,
  },

  lastProcessed: {
    type: Date,
  },

  status: {
    type: String,
    enum: TransactionStatus,
    default: 'COMPLETED',
  },

//   Foreign key for the user relationship.
  userId: {
    type: String,
    required: true,
  },

  // Foreign key for the account relationship.
  accountId: {
    type: String,
    required: true,
  },
  
  // Timestamps
  createdAt: {
    type: Date,
    default: Date.now,
  },

  updatedAt: {
    type: Date,
    default: Date.now,
  },
});

const Transaction = mongoose.model('Transaction', transactionSchema);

export default Transaction;
